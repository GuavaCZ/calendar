// resources/js/calendar-event.js
function calendarEvent({
  event,
  timeText,
  view,
  hasContextMenu
}) {
  return {
    event,
    contextMenu: null,
    init: function() {
      if (hasContextMenu) {
        this.initializeContextMenu();
      }
      this.$el.setAttribute("data-event-id", event.id);
      this.$el.addEventListener("mouseenter", () => {
        document.querySelectorAll(`.ec-event[data-event-id="${event.id}"]`).forEach((el) => {
          el.classList.add("gu-hover");
        });
      });
      this.$el.addEventListener("mouseleave", () => {
        document.querySelectorAll(`.ec-event[data-event-id="${event.id}"]`).forEach((el) => {
          el.classList.remove("gu-hover");
        });
      });
    },
    initializeContextMenu: function() {
      const element = document.querySelector("[calendar-context-menu]");
      this.contextMenu = Alpine.$data(element);
    },
    /**
     * Called when an event is clicked, if event clicking is enabled in the calendar.
     * @param info
     */
    onClick: function(info) {
      if (info.event.extendedProps.url) {
        window.open(
          this.event.extendedProps.url,
          this.event.extendedProps.url_target ?? "_blank"
        );
        return;
      }
      const data = {
        event: info.event,
        view: info.view,
        tzOffset: -(/* @__PURE__ */ new Date()).getTimezoneOffset()
      };
      if (hasContextMenu) {
        this.contextMenu.loadActions("eventClick", data);
        this.contextMenu.openMenu(
          info.jsEvent,
          this.$el
        );
        return;
      }
      this.$wire.onEventClickJs(data);
    }
  };
}
export {
  calendarEvent as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vcmVzb3VyY2VzL2pzL2NhbGVuZGFyLWV2ZW50LmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjYWxlbmRhckV2ZW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQ29udGV4dE1lbnUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIGV2ZW50LFxuICAgICAgICBjb250ZXh0TWVudTogbnVsbCxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaGFzQ29udGV4dE1lbnUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRpYWxpemVDb250ZXh0TWVudSgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLiRlbC5zZXRBdHRyaWJ1dGUoJ2RhdGEtZXZlbnQtaWQnLCBldmVudC5pZClcblxuICAgICAgICAgICAgdGhpcy4kZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VlbnRlcicsICgpID0+IHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuZWMtZXZlbnRbZGF0YS1ldmVudC1pZD1cIiR7ZXZlbnQuaWR9XCJdYCkuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2d1LWhvdmVyJylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcblxuICAgICAgICAgICAgdGhpcy4kZWwuYWRkRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsICgpID0+IHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGAuZWMtZXZlbnRbZGF0YS1ldmVudC1pZD1cIiR7ZXZlbnQuaWR9XCJdYCkuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGVsLmNsYXNzTGlzdC5yZW1vdmUoJ2d1LWhvdmVyJylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC8vIFByZWxvYWRpbmdcbiAgICAgICAgICAgIC8vIHRoaXMuJGVsLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCAoKSA9PiB7XG4gICAgICAgICAgICAvLyAgICAgdGhpcy5jb250ZXh0TWVudS5sb2FkQWN0aW9ucyh0aGlzLmV2ZW50KVxuICAgICAgICAgICAgLy8gfSlcbiAgICAgICAgfSxcblxuICAgICAgICBpbml0aWFsaXplQ29udGV4dE1lbnU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbY2FsZW5kYXItY29udGV4dC1tZW51XScpXG4gICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51ID0gQWxwaW5lLiRkYXRhKGVsZW1lbnQpXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIENhbGxlZCB3aGVuIGFuIGV2ZW50IGlzIGNsaWNrZWQsIGlmIGV2ZW50IGNsaWNraW5nIGlzIGVuYWJsZWQgaW4gdGhlIGNhbGVuZGFyLlxuICAgICAgICAgKiBAcGFyYW0gaW5mb1xuICAgICAgICAgKi9cbiAgICAgICAgb25DbGljazogZnVuY3Rpb24gKGluZm8pIHtcbiAgICAgICAgICAgIGlmIChpbmZvLmV2ZW50LmV4dGVuZGVkUHJvcHMudXJsKSB7XG4gICAgICAgICAgICAgICAgd2luZG93Lm9wZW4oXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZXh0ZW5kZWRQcm9wcy51cmwsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnQuZXh0ZW5kZWRQcm9wcy51cmxfdGFyZ2V0ID8/ICdfYmxhbmsnXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICAgICAgICAgIGV2ZW50OiBpbmZvLmV2ZW50LFxuICAgICAgICAgICAgICAgIHZpZXc6IGluZm8udmlldyxcbiAgICAgICAgICAgICAgICB0ek9mZnNldDogLW5ldyBEYXRlKCkuZ2V0VGltZXpvbmVPZmZzZXQoKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoaGFzQ29udGV4dE1lbnUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51LmxvYWRBY3Rpb25zKCdldmVudENsaWNrJywgZGF0YSlcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51Lm9wZW5NZW51KFxuICAgICAgICAgICAgICAgICAgICBpbmZvLmpzRXZlbnQsXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuJGVsXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIHJldHVyblxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLiR3aXJlLm9uRXZlbnRDbGlja0pzKGRhdGEpXG4gICAgICAgIH0sXG4gICAgfVxufVxuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUFlLFNBQVIsY0FBK0I7QUFBQSxFQUNJO0FBQUEsRUFDQTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQ0osR0FDcEM7QUFDRSxTQUFPO0FBQUEsSUFDSDtBQUFBLElBQ0EsYUFBYTtBQUFBLElBRWIsTUFBTSxXQUFZO0FBQ2QsVUFBSSxnQkFBZ0I7QUFDaEIsYUFBSyxzQkFBc0I7QUFBQSxNQUMvQjtBQUNBLFdBQUssSUFBSSxhQUFhLGlCQUFpQixNQUFNLEVBQUU7QUFFL0MsV0FBSyxJQUFJLGlCQUFpQixjQUFjLE1BQU07QUFDMUMsaUJBQVMsaUJBQWlCLDRCQUE0QixNQUFNLEVBQUUsSUFBSSxFQUFFLFFBQVEsUUFBTTtBQUM5RSxhQUFHLFVBQVUsSUFBSSxVQUFVO0FBQUEsUUFDL0IsQ0FBQztBQUFBLE1BQ0wsQ0FBQztBQUVELFdBQUssSUFBSSxpQkFBaUIsY0FBYyxNQUFNO0FBQzFDLGlCQUFTLGlCQUFpQiw0QkFBNEIsTUFBTSxFQUFFLElBQUksRUFBRSxRQUFRLFFBQU07QUFDOUUsYUFBRyxVQUFVLE9BQU8sVUFBVTtBQUFBLFFBQ2xDLENBQUM7QUFBQSxNQUNMLENBQUM7QUFBQSxJQUtMO0FBQUEsSUFFQSx1QkFBdUIsV0FBWTtBQUMvQixZQUFNLFVBQVUsU0FBUyxjQUFjLHlCQUF5QjtBQUNoRSxXQUFLLGNBQWMsT0FBTyxNQUFNLE9BQU87QUFBQSxJQUMzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFNQSxTQUFTLFNBQVUsTUFBTTtBQUNyQixVQUFJLEtBQUssTUFBTSxjQUFjLEtBQUs7QUFDOUIsZUFBTztBQUFBLFVBQ0gsS0FBSyxNQUFNLGNBQWM7QUFBQSxVQUN6QixLQUFLLE1BQU0sY0FBYyxjQUFjO0FBQUEsUUFDM0M7QUFDQTtBQUFBLE1BQ0o7QUFFQSxZQUFNLE9BQU87QUFBQSxRQUNULE9BQU8sS0FBSztBQUFBLFFBQ1osTUFBTSxLQUFLO0FBQUEsUUFDWCxVQUFVLEVBQUMsb0JBQUksS0FBSyxHQUFFLGtCQUFrQjtBQUFBLE1BQzVDO0FBRUEsVUFBSSxnQkFBZ0I7QUFDaEIsYUFBSyxZQUFZLFlBQVksY0FBYyxJQUFJO0FBQy9DLGFBQUssWUFBWTtBQUFBLFVBQ2IsS0FBSztBQUFBLFVBQ0wsS0FBSztBQUFBLFFBQ1Q7QUFDQTtBQUFBLE1BQ0o7QUFFQSxXQUFLLE1BQU0sZUFBZSxJQUFJO0FBQUEsSUFDbEM7QUFBQSxFQUNKO0FBQ0o7IiwKICAibmFtZXMiOiBbXQp9Cg==
