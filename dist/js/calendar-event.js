// resources/js/calendar-event.js
function calendarEvent({
  event,
  timeText,
  view,
  hasContextMenu
}) {
  return {
    event,
    contextMenu: null,
    init: function() {
      if (hasContextMenu) {
        this.initializeContextMenu();
      }
    },
    initializeContextMenu: function() {
      const element = document.querySelector("[calendar-context-menu]");
      this.contextMenu = Alpine.$data(element);
    },
    /**
     * Called when an event is clicked, if event clicking is enabled in the calendar.
     * @param info
     */
    onClick: function(info) {
      if (info.event.extendedProps.url) {
        window.open(
          this.event.extendedProps.url,
          this.event.extendedProps.url_target ?? "_blank"
        );
        return;
      }
      if (hasContextMenu) {
        this.contextMenu.loadActions("eventClick", { event: this.event });
        this.contextMenu.openMenu(
          info.jsEvent,
          this.$el
        );
        return;
      }
      this.$wire.onEventClickJs({
        event: info.event,
        view: info.view,
        tzOffset: -(/* @__PURE__ */ new Date()).getTimezoneOffset()
      });
    }
  };
}
export {
  calendarEvent as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vcmVzb3VyY2VzL2pzL2NhbGVuZGFyLWV2ZW50LmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjYWxlbmRhckV2ZW50KHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV2ZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVRleHQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2aWV3LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzQ29udGV4dE1lbnUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIGV2ZW50LFxuICAgICAgICBjb250ZXh0TWVudTogbnVsbCxcblxuICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBpZiAoaGFzQ29udGV4dE1lbnUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmluaXRpYWxpemVDb250ZXh0TWVudSgpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBQcmVsb2FkaW5nXG4gICAgICAgICAgICAvLyB0aGlzLiRlbC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgKCkgPT4ge1xuICAgICAgICAgICAgLy8gICAgIHRoaXMuY29udGV4dE1lbnUubG9hZEFjdGlvbnModGhpcy5ldmVudClcbiAgICAgICAgICAgIC8vIH0pXG4gICAgICAgIH0sXG5cbiAgICAgICAgaW5pdGlhbGl6ZUNvbnRleHRNZW51OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2NhbGVuZGFyLWNvbnRleHQtbWVudV0nKVxuICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudSA9IEFscGluZS4kZGF0YShlbGVtZW50KVxuICAgICAgICB9LFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBDYWxsZWQgd2hlbiBhbiBldmVudCBpcyBjbGlja2VkLCBpZiBldmVudCBjbGlja2luZyBpcyBlbmFibGVkIGluIHRoZSBjYWxlbmRhci5cbiAgICAgICAgICogQHBhcmFtIGluZm9cbiAgICAgICAgICovXG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIChpbmZvKSB7XG4gICAgICAgICAgICBpZiAoaW5mby5ldmVudC5leHRlbmRlZFByb3BzLnVybCkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50LmV4dGVuZGVkUHJvcHMudXJsLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50LmV4dGVuZGVkUHJvcHMudXJsX3RhcmdldCA/PyAnX2JsYW5rJ1xuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGhhc0NvbnRleHRNZW51KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudS5sb2FkQWN0aW9ucygnZXZlbnRDbGljaycsIHtldmVudDogdGhpcy5ldmVudH0pXG4gICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudS5vcGVuTWVudShcbiAgICAgICAgICAgICAgICAgICAgaW5mby5qc0V2ZW50LFxuICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbFxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy4kd2lyZS5vbkV2ZW50Q2xpY2tKcyh7XG4gICAgICAgICAgICAgICAgZXZlbnQ6IGluZm8uZXZlbnQsXG4gICAgICAgICAgICAgICAgdmlldzogaW5mby52aWV3LFxuICAgICAgICAgICAgICAgIHR6T2Zmc2V0OiAtbmV3IERhdGUoKS5nZXRUaW1lem9uZU9mZnNldCgpXG4gICAgICAgICAgICB9KVxuICAgICAgICB9LFxuICAgIH1cbn1cbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBZSxTQUFSLGNBQStCO0FBQUEsRUFDSTtBQUFBLEVBQ0E7QUFBQSxFQUNBO0FBQUEsRUFDQTtBQUNKLEdBQ3BDO0FBQ0UsU0FBTztBQUFBLElBQ0g7QUFBQSxJQUNBLGFBQWE7QUFBQSxJQUViLE1BQU0sV0FBWTtBQUNkLFVBQUksZ0JBQWdCO0FBQ2hCLGFBQUssc0JBQXNCO0FBQUEsTUFDL0I7QUFBQSxJQUtKO0FBQUEsSUFFQSx1QkFBdUIsV0FBWTtBQUMvQixZQUFNLFVBQVUsU0FBUyxjQUFjLHlCQUF5QjtBQUNoRSxXQUFLLGNBQWMsT0FBTyxNQUFNLE9BQU87QUFBQSxJQUMzQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFNQSxTQUFTLFNBQVUsTUFBTTtBQUNyQixVQUFJLEtBQUssTUFBTSxjQUFjLEtBQUs7QUFDOUIsZUFBTztBQUFBLFVBQ0gsS0FBSyxNQUFNLGNBQWM7QUFBQSxVQUN6QixLQUFLLE1BQU0sY0FBYyxjQUFjO0FBQUEsUUFDM0M7QUFDQTtBQUFBLE1BQ0o7QUFFQSxVQUFJLGdCQUFnQjtBQUNoQixhQUFLLFlBQVksWUFBWSxjQUFjLEVBQUMsT0FBTyxLQUFLLE1BQUssQ0FBQztBQUM5RCxhQUFLLFlBQVk7QUFBQSxVQUNiLEtBQUs7QUFBQSxVQUNMLEtBQUs7QUFBQSxRQUNUO0FBQ0E7QUFBQSxNQUNKO0FBRUEsV0FBSyxNQUFNLGVBQWU7QUFBQSxRQUN0QixPQUFPLEtBQUs7QUFBQSxRQUNaLE1BQU0sS0FBSztBQUFBLFFBQ1gsVUFBVSxFQUFDLG9CQUFJLEtBQUssR0FBRSxrQkFBa0I7QUFBQSxNQUM1QyxDQUFDO0FBQUEsSUFDTDtBQUFBLEVBQ0o7QUFDSjsiLAogICJuYW1lcyI6IFtdCn0K
